-- Checks if file exists
function file_exists(name)
   local f=io.open(name,"r")
   if f~=nil then io.close(f) return true else return false end
end

-- Read file into table of lines
function lines_from(file)
  if not file_exists(file) then return {} end
  lines = {}
  for line in io.lines(file) do
    lines[#lines + 1] = line
  end
  return lines
end


--
-- Read env file
-- key=value formatted file
-- You should include `URL=url_to_your_apollo_server` or don't call the apollo function
--

-- Read lines into table
local lines = lines_from('/home/marcel/.config/conky/env')

-- Create config var
local config = {}

-- Parse file line by line
for i, line in pairs(lines) do
  local key, val = line:match("([^=]+)=(.+)")
  config[key] = val
end

conky.config = {
  alignment = 'bottom_left',
  background = true,
  border_width =  1,
  cpu_avg_samples =  2,
  default_color = 'white',
  default_outline_color = 'black',
  default_shade_color = 'black',
  draw_borders = false,
  draw_graph_borders = false,
  draw_outline = false,
  draw_shades = false,
  use_xft = true,
  font = "Fira Sans",
  gap_x = tonumber(config.GAP_X),
  gap_y = tonumber(config.GAP_Y),
  border_inner_margin = 20,
  net_avg_samples = 2,
  no_buffers = true,
  out_to_console = false,
  out_to_stderr = false,
  extra_newline = false,
  own_window = true,
  own_window_class = Conky,
  own_window_argb_visual = true,
  own_window_argb_value = 200,
  own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
  stippled_borders = 0,
  update_interval = 1,
  uppercase = false,
  text_buffer_size = 1024,
  double_buffer = true,
  show_graph_scale = false,
  show_graph_range = false,
  draw_graph_borders = false,
  lua_load = "/home/marcel/.config/conky/mpd.lua",
}

conky.text = '${texeci 10 /home/marcel/bin/artwork 2>&1 > /dev/null}${lua main}'
